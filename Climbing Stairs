https://leetcode.com/problems/climbing-stairs/description/


Brute Force:

class Solution {
public:
    int climbStairs(int n) {
        if(n < 0) return 0;
        if(n == 0) return 1;

        int climb1 = climbStairs(n-1);
        int climb2 = climbStairs(n-2);

        return climb1+climb2;
    }
};


Memoization:

class Solution {
public:
    int solve(int n,vector<int>& dp)
    {
        if(n < 0) return 0;
        if(n == 0) return 1;

        if(dp[n]!=-1) return dp[n];

        int climb1 = solve(n-1,dp);
        int climb2 = solve(n-2,dp);

        return dp[n] = climb1+climb2;
    }
    int climbStairs(int n) {
        vector<int> dp(n+1,-1);
        return solve(n,dp);
    }
};


