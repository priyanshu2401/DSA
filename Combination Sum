https://leetcode.com/problems/combination-sum/


class Solution {
public:
    vector<vector<int>> res; 
    void backtrack(int i,vector<int>& candidates,int target,vector<int>& ans,int n)
    {
        if(i>=n || target<0) return;
        if(target==0)
        {
            res.push_back(ans);
            return;
        }

        if(candidates[i] <= target)
        {
            ans.push_back(candidates[i]);
            backtrack(i,candidates,target-candidates[i],ans,n);
            ans.pop_back();
        }

        backtrack(i+1,candidates,target,ans,n);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int> ans;
        int n = candidates.size();
        backtrack(0,candidates,target,ans,n);
        return res;
    }
};
