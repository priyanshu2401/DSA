https://leetcode.com/problems/subsets-ii/


class Solution {
public:
    vector<vector<int>> ans,res;
    set<vector<int>> s;
    void backtrack(int i,vector<int>& nums,int n,vector<int>& temp)
    {
        if(i>=n)
        {
            ans.push_back(temp);
            return;
        }

        temp.push_back(nums[i]);
        backtrack(i+1,nums,n,temp);
        temp.pop_back();

        backtrack(i+1,nums,n,temp);        
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        int n = nums.size();
        vector<int> temp;
        backtrack(0,nums,n,temp);
        for(auto &x: ans)
        {
            sort(x.begin(),x.end());
            s.insert(x);
        }
        for(auto &x: s) res.push_back(x);
        return res;
    }
};
