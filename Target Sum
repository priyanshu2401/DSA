https://leetcode.com/problems/target-sum/description/


class Solution {
public:
    int solve(vector<int>& nums, int target, int i,int n,vector<vector<int>>& dp)
    {
        if(i==n)
        {
            if(target==0) return 1;
            return 0;
        }
        if(dp[i][target+10000]!=-1) return dp[i][target+10000];
        
        int pos = solve(nums,target-nums[i],i+1,n,dp);
        int neg = solve(nums,target+nums[i],i+1,n,dp);

        return dp[i][target+10000] = pos+neg;
    }
    int findTargetSumWays(vector<int>& nums, int target) {
        int n = nums.size();
        vector<vector<int>> dp(n+1,vector<int>(20001,-1));
        return solve(nums,target,0,n,dp);
    }
};
