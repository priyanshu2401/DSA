https://leetcode.com/problems/combinations/description/


class Solution {
public:
    vector<vector<int>> ans;
    void backtrack(int i,vector<int>& nums,int k,int n,vector<int>& temp)
    {
        // cout<<"i = "<<i<<endl;
        
        // cout<<"temp = ";
        // for(auto &x: temp) cout<<x<<" ";
        // cout<<endl;
        if(k==0)
        {
            ans.push_back(temp);
            return;
        }

        for(int x=i;x<n;x++)
        {
            // cout<<"x = "<<x<<endl;
            temp.push_back(nums[x]);
            backtrack(x+1,nums,k-1,n,temp);
            temp.pop_back();
        }
    }
    vector<vector<int>> combine(int n, int k) {
        vector<int> nums,temp;
        for(int i=1;i<=n;i++) nums.push_back(i);
        backtrack(0,nums,k,n,temp);
        return ans;
    }
};
