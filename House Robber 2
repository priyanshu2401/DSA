https://leetcode.com/problems/house-robber-ii/description/


class Solution {
public:
    int solve(vector<int>& nums,int i,int n,vector<int> &dp)
    {
        if(i >= n) return 0;
        if(dp[i]!=-1) return dp[i];

        int pick = solve(nums,i+2,n,dp) + nums[i];
        int notpick = solve(nums,i+1,n,dp);

        return dp[i] = max(pick,notpick);
    }
    int rob(vector<int>& nums) {
        int n = nums.size();
        if(n==1) return nums[0];
        vector<int> dp1(n+1,-1),dp2(n+1,-1);
        return max(solve(nums,0,n-1,dp1),solve(nums,1,n,dp2));
    }
};
