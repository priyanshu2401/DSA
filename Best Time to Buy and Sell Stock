https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/


class Solution {
public:
    int maxProfit(vector<int>& prices) {
        stack<int> s;
        int maxi = INT_MIN;
        s.push(prices[0]);
        for(int i=1;i<prices.size();i++)
        {
            if(prices[i] < s.top())
            {
                s.pop();
                s.push(prices[i]);
            }
            else maxi = max(maxi,prices[i]-s.top());
        }
        if(maxi < 0) return 0;
        return maxi;
    }
};


class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int mini=prices[0],ans=INT_MIN;
        for(int i=1;i<prices.size();i++)
        {
            ans = max(ans,prices[i]-mini);
            mini = min(mini,prices[i]);
        }
        if(ans>=0) return ans;
        else return 0;
    }
};
