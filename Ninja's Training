https://practice.geeksforgeeks.org/problems/geeks-training/1

My Approach:

class Solution {
  public:
    int solve(vector<vector<int>>& points,int i,int j,int n,vector<vector<int>>& dp)
    {
        if(i>=n) return 0;
        if(i==n-1) return points[i][j];
        if(dp[i][j]!=-1) return dp[i][j];
        
        int a,b;
        if(j==0)
        {
            a = solve(points,i+1,1,n,dp) + points[i][j];
            b = solve(points,i+1,2,n,dp) + points[i][j];
        }
        if(j==1)
        {
            a = solve(points,i+1,0,n,dp) + points[i][j];
            b = solve(points,i+1,2,n,dp) + points[i][j];
        }
        if(j==2)
        {
            a = solve(points,i+1,0,n,dp) + points[i][j];
            b = solve(points,i+1,1,n,dp) + points[i][j];
        }
        
        return dp[i][j]=max(a,b);
    }
    int maximumPoints(vector<vector<int>>& points, int n) {
        // Code here
        vector<vector<int>> dp(n+1,vector<int>(4,-1));
        int a = solve(points,0,0,n,dp);
        int b = solve(points,0,1,n,dp);
        int c = solve(points,0,2,n,dp);
        return max(a,max(b,c));
    }
};
