https://leetcode.com/problems/binary-tree-right-side-view/description/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        if(root==NULL) return ans;
        map<int,int> m;
        
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        
        while(!q.empty())
        {
            TreeNode* front = q.front().first;
            int line = q.front().second;
            q.pop();
            
            m[line] = front->val;
            
            if(front->left!=NULL) q.push({front->left,line+1});
            if(front->right!=NULL) q.push({front->right,line+1});
        }
        
        for(auto &i: m) ans.push_back(i.second);
        return ans;
    }
};
